{"version":3,"sources":["images sync /^/.//.*$","images/product-1.jpg","images/product-2.jpg","images/product-3.jpg","images/product-4.jpg","images/product-5.jpg","images/product-6.jpg","images/product-7.jpg","images/product-8.jpg","components/product/productReducer.js","redux/rootReducer.js","redux/types.js","redux/store.js","components/product/ProductFilter.jsx","components/product/productActions.js","utils.js","components/product/ProductItem.jsx","components/product/ProductList.jsx","App.js","serviceWorker.js","index.js"],"names":["map","./product-1.jpg","./product-2.jpg","./product-3.jpg","./product-4.jpg","./product-5.jpg","./product-6.jpg","./product-7.jpg","./product-8.jpg","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","initialState","products","selectedSize","loading","combineReducers","product","state","arguments","length","undefined","action","type","payload","objectSpread","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","Form","styled","form","_templateObject","actions","getSelectedProductSize","dispatch","productSize","target","value","console","log","connect","_ref","productSizeOptions","label","soa","react_default","a","createElement","key","unshift","disabled","onChange","isEmpty","Array","isArray","trim","images","require","Item","li","ProductItem_templateObject","Image","div","_templateObject2","SalesBadge","_templateObject3","props","theme","backgroundColor","ProductDetails","_templateObject4","ProductItem","imageUrl","concat","productImage","SalesBadgeLabel","isExclusive","isSale","src","alt","productName","price","Products","ul","ProductList_templateObject","Loading","ProductList_templateObject2","content","filteredProducts","filter","fp","size","some","ProductItems","product_ProductItem","index","Page","section","App_templateObject","Header","App_templateObject2","App","useEffect","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","t0","stop","_x","this","es","product_ProductFilter","product_ProductList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dab68b06.chunk.js","sourcesContent":["var map = {\n\t\"./product-1.jpg\": 63,\n\t\"./product-2.jpg\": 64,\n\t\"./product-3.jpg\": 65,\n\t\"./product-4.jpg\": 66,\n\t\"./product-5.jpg\": 67,\n\t\"./product-6.jpg\": 68,\n\t\"./product-7.jpg\": 69,\n\t\"./product-8.jpg\": 70\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 62;","module.exports = __webpack_public_path__ + \"static/media/product-1.5b629eeb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product-2.e013f11a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product-3.b756e167.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product-4.3367517d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product-5.7a256f82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product-6.15bf9c82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product-7.fcd37ef5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/product-8.b14dd313.jpg\";","import { LOADED_PRODUCTS, SET_PRODUCT_SIZE } from '../../redux/types';\n\nconst initialState = {\n  products: null,\n  selectedSize: 'default',\n  loading: true\n};\n\nexport default function(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOADED_PRODUCTS:\n      return {\n        ...state,\n        loading: false,\n        products: payload\n      };\n\n    case SET_PRODUCT_SIZE:\n      return {\n        ...state,\n        loading: false,\n        selectedSize: payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport productReducer from '../components/product/productReducer';\n\nexport default combineReducers({\n  product: productReducer\n});\n","export const LOADED_PRODUCTS = 'LOADED_PRODUCTS';\nexport const SET_PRODUCT_SIZE = 'SET_PRODUCT_SIZE';\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getSelectedProductSize } from './productActions';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  align-items: center;\n\n  select {\n    width: 150px;\n  }\n`;\n\nconst ProductFilter = ({ product, getSelectedProductSize }) => {\n  let productSizeOptions;\n  let selectedOptionCheck = false;\n  let sizeOtionsArray = [\n    {\n      label: 'Extra Small',\n      value: 'XS'\n    },\n    {\n      label: 'Small',\n      value: 'S'\n    },\n    {\n      label: 'Medium',\n      value: 'M'\n    },\n    {\n      label: 'Large',\n      value: 'L'\n    },\n    {\n      label: 'Extra Large',\n      value: 'XL'\n    }\n  ];\n\n  if (!product.loading) {\n    productSizeOptions = sizeOtionsArray.map(soa => {\n      if (soa.value === product.selectedSize) {\n        selectedOptionCheck = true;\n        return (\n          <option key={soa.value} value={soa.value}>\n            {soa.label}\n          </option>\n        );\n      } else {\n        return (\n          <option key={soa.value} value={soa.value}>\n            {soa.label}\n          </option>\n        );\n      }\n    });\n\n    productSizeOptions.unshift(\n      <option key=\"x\" value=\"default\" disabled>\n        Filter by size\n      </option>\n    );\n  } else {\n    // TODO: Display loading spinner?\n  }\n\n  console.log('product.selectedSize', product.selectedSize);\n\n  return (\n    <Form>\n      <select\n        value={product.selectedSize}\n        onChange={getSelectedProductSize}\n      >\n        {productSizeOptions && productSizeOptions}\n      </select>\n    </Form>\n  );\n};\n\nconst actions = {\n  getSelectedProductSize\n};\n\nconst mapState = state => ({\n  product: state.product\n});\n\nexport default connect(\n  mapState,\n  actions\n)(ProductFilter);\n","import axios from 'axios';\nimport { LOADED_PRODUCTS, SET_PRODUCT_SIZE } from '../../redux/types';\n\n// Load Products\nexport const loadProducts = () => async dispatch => {\n  try {\n    const res = await axios.get(\n      'https://api.jsonbin.io/b/5cae9a54fb42337645ebcad3'\n    );\n\n    // TODO: run a check to see if products array is empty from the api\n    // If empty display notice to user\n\n    dispatch({ type: LOADED_PRODUCTS, payload: res.data });\n  } catch (err) {\n    // TODO: if there is an issue with the products being loaded from the API run error function\n    console.log('err', err);\n  }\n};\n\nexport const getSelectedProductSize = e => dispatch => {\n  const productSize = e.target.value;\n  console.log(productSize);\n\n  dispatch({ type: SET_PRODUCT_SIZE, payload: productSize });\n};\n","export const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  value === 0 ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (Array.isArray(value) && value.length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0) ||\n  (typeof value === 'string' && value === 'null');\n","import React from 'react';\nimport styled from 'styled-components';\nconst images = require.context('../../images/', true);\n\nconst Item = styled.li`\n  list-style-type: none;\n  border: 1px solid #f1f1f1;\n  padding: 10px;\n  padding-bottom: 30px;\n`;\n\nconst Image = styled.div`\n  margin: 10px;\n\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n`;\n\nconst SalesBadge = styled.div`\n  height: 50px;\n  width: 100%;\n\n  span {\n    background-color: ${props => props.theme.backgroundColor};\n    height: 50px;\n    display: inline-flex;\n    align-items: center;\n    padding: 0px 22px;\n    color: #fff;\n  }\n`;\n\n// Define what backgroundColor theme will look like\nconst theme = {\n  backgroundColor: 'transparent'\n};\n\nconst ProductDetails = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, auto);\n  margin-top: 10px;\n  grid-gap: 10px;\n\n  span:first-child {\n    font-size: 20px;\n  }\n\n  span:last-child {\n    font-size: 30px;\n    text-align: right;\n  }\n`;\n\nconst ProductItem = ({ product }) => {\n  let imageUrl = images(`./${product.productImage}`);\n\n  // TODO: Check if image was found, if it wasn't set default image\n\n  let SalesBadgeLabel = <SalesBadge />;\n  // Will there ever be more than one Sales Badge per product?\n  if (product.isExclusive) {\n    SalesBadgeLabel = (\n      <SalesBadge theme={{ backgroundColor: 'green' }}>\n        <span>Exclusive</span>\n      </SalesBadge>\n    );\n  }\n  if (product.isSale) {\n    SalesBadgeLabel = (\n      <SalesBadge theme={{ backgroundColor: 'red' }}>\n        <span>Sale</span>\n      </SalesBadge>\n    );\n  }\n\n  return (\n    <Item>\n      <Image>\n        <img src={imageUrl} alt=\"any\" />\n      </Image>\n      {SalesBadgeLabel && SalesBadgeLabel}\n      <ProductDetails>\n        <span>{product.productName}</span>\n        <span>{product.price}</span>\n      </ProductDetails>\n    </Item>\n  );\n};\n\nexport default ProductItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { isEmpty } from '../../utils';\nimport ProductItem from './ProductItem';\nimport styled from 'styled-components';\n\nconst Products = styled.ul`\n  display: grid;\n  padding: 0px;\n  grid-template-columns: repeat(1, 1fr);\n\n  @media (min-width: 450px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (min-width: 700px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media (min-width: 960px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`;\n\nconst Loading = styled.p`\n  font-size: 20px;\n  text-align: center;\n  margin: 120px 0px;\n`;\n\nconst ProductList = ({ product }) => {\n  // Create a content variable to change the content based selected products\n  let content;\n  if (!product.loading) {\n    if (isEmpty(product.products)) {\n      content = <p>No Products were found</p>;\n    } else {\n      // Loop through products and find the products that have the selected size\n      let filteredProducts = product.products.filter(fp => {\n        return fp.size.some(size => {\n          return size === product.selectedSize;\n        });\n      });\n\n      // If filtered products is empty set the filtered products to all products as a default\n      // So when the page first loads all the products display\n      if (isEmpty(filteredProducts)) {\n        filteredProducts = product.products;\n      }\n\n      let ProductItems = filteredProducts.map(p => {\n        return <ProductItem product={p} key={p.index} />;\n      });\n\n      content = <Products>{ProductItems}</Products>;\n    }\n  } else {\n    // Inform the user that the products are loading\n    content = <Loading>Loading..</Loading>;\n  }\n  return content;\n};\n\nconst mapState = state => ({\n  product: state.product\n});\n\nexport default connect(mapState)(ProductList);\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { loadProducts } from './components/product/productActions';\n\n// Components\nimport ProductFilter from './components/product/ProductFilter';\nimport ProductList from './components/product/ProductList';\n\n// Styled Components\nconst Page = styled.section`\n  max-width: 960px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.section`\n  background-color: #def1f4;\n  padding: 10px;\n  margin-top: 40px;\n  display: grid;\n  grid-template-columns: auto 200px;\n\n  h1 {\n    font-size: 30px;\n    margin: 0px;\n    display: flex;\n    align-items: center;\n  }\n`;\n\nconst App = () => {\n  // Call load products on initial load\n  useEffect(() => {\n    store.dispatch(loadProducts());\n  }, []);\n  return (\n    <Provider store={store}>\n      <Page>\n        <Header>\n          <h1>Women's tops</h1>\n          <ProductFilter />\n        </Header>\n        <ProductList />\n      </Page>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}